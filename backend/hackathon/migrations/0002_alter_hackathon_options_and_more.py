# Generated by Django 5.1.7 on 2025-03-14 09:13

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('hackathon', '0001_initial'),
        ('users', '0002_alter_userprofile_username'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='hackathon',
            options={},
        ),
        migrations.RenameField(
            model_name='hackathon',
            old_name='full_description',
            new_name='description',
        ),
        migrations.RemoveField(
            model_name='hackathon',
            name='end_date',
        ),
        migrations.RemoveField(
            model_name='hackathon',
            name='image',
        ),
        migrations.RemoveField(
            model_name='hackathon',
            name='is_online',
        ),
        migrations.RemoveField(
            model_name='hackathon',
            name='max_participants',
        ),
        migrations.RemoveField(
            model_name='hackathon',
            name='registration_deadline',
        ),
        migrations.RemoveField(
            model_name='hackathon',
            name='requirements',
        ),
        migrations.RemoveField(
            model_name='hackathon',
            name='short_description',
        ),
        migrations.RemoveField(
            model_name='hackathon',
            name='start_date',
        ),
        migrations.RemoveField(
            model_name='tag',
            name='created_at',
        ),
        migrations.AddField(
            model_name='hackathon',
            name='allow_solo_registration',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='hackathon',
            name='allow_team_registration',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='hackathon',
            name='allow_team_search',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='hackathon',
            name='crystal_reward_winner',
            field=models.PositiveIntegerField(default=100),
        ),
        migrations.AddField(
            model_name='hackathon',
            name='enable_public_voting',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='hackathon',
            name='judges',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='hackathon',
            name='max_team_size',
            field=models.PositiveIntegerField(default=4),
        ),
        migrations.AddField(
            model_name='hackathon',
            name='number_of_winners',
            field=models.PositiveIntegerField(default=3, validators=[django.core.validators.MinValueValidator(1)]),
        ),
        migrations.AddField(
            model_name='hackathon',
            name='organizer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='organized_hackathons', to='users.userprofile'),
        ),
        migrations.AddField(
            model_name='hackathon',
            name='program',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='hackathon',
            name='registration_limit',
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='hackathon',
            name='rules',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='hackathon',
            name='show_solutions_after_deadline',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='hackathon',
            name='solo_participants',
            field=models.ManyToManyField(blank=True, related_name='solo_hackathons', to='users.userprofile'),
        ),
        migrations.AddField(
            model_name='hackathon',
            name='status',
            field=models.CharField(choices=[('anonce', 'Анонс'), ('start_registration', 'Регистрации'), ('end_registration', 'Регистрация завершена'), ('started', 'Проводится'), ('determining_stage', 'Определение победителей'), ('finished', 'Завершенный')], default='anonce', max_length=100),
        ),
        migrations.AddField(
            model_name='hackathon',
            name='type',
            field=models.CharField(choices=[('online', 'Онлайн'), ('offline', 'Офлайн'), ('hybrid', 'Гибридный')], default='online', max_length=100),
        ),
        migrations.AddField(
            model_name='hackathon',
            name='xp_reward_participation',
            field=models.PositiveIntegerField(default=50),
        ),
        migrations.AddField(
            model_name='hackathon',
            name='xp_reward_winner',
            field=models.PositiveIntegerField(default=200),
        ),
        migrations.AddField(
            model_name='tag',
            name='description',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='hackathon',
            name='location',
            field=models.CharField(blank=True, max_length=200, null=True),
        ),
        migrations.AlterField(
            model_name='hackathon',
            name='name',
            field=models.CharField(max_length=100),
        ),
        migrations.AlterField(
            model_name='hackathon',
            name='participants',
            field=models.ManyToManyField(related_name='hackathons', to='users.userprofile'),
        ),
        migrations.AlterField(
            model_name='hackathon',
            name='prize_pool',
            field=models.IntegerField(default=0),
        ),
        migrations.AlterField(
            model_name='tag',
            name='name',
            field=models.CharField(max_length=100),
        ),
        migrations.CreateModel(
            name='HackathonImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preview_image', models.URLField(blank=True, null=True)),
                ('banner_image', models.URLField(blank=True, null=True)),
                ('cover_image', models.URLField(blank=True, null=True)),
                ('thumbnail_image', models.URLField(blank=True, null=True)),
                ('hackathon', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='hackathon.hackathon')),
            ],
        ),
        migrations.CreateModel(
            name='HackathonMeta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sponsor_logos', models.JSONField(blank=True, null=True)),
                ('livestream_links', models.JSONField(blank=True, null=True)),
                ('faq', models.JSONField(blank=True, null=True)),
                ('hackathon', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='meta', to='hackathon.hackathon')),
            ],
        ),
        migrations.CreateModel(
            name='HackathonStatistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_registered', models.PositiveIntegerField(default=0)),
                ('total_submissions', models.PositiveIntegerField(default=0)),
                ('total_teams', models.PositiveIntegerField(default=0)),
                ('total_views', models.PositiveIntegerField(default=0)),
                ('hackathon', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='statistics', to='hackathon.hackathon')),
            ],
        ),
        migrations.CreateModel(
            name='HackathonTime',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField(verbose_name='Дата начала')),
                ('end_date', models.DateTimeField(verbose_name='Дата окончания')),
                ('registration_deadline', models.DateTimeField(verbose_name='Дедлайн регистрации')),
                ('hackathon', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='time_info', to='hackathon.hackathon')),
            ],
            options={
                'verbose_name': 'Время проведения хакатона',
                'verbose_name_plural': 'Время проведения хакатонов',
            },
        ),
    ]
